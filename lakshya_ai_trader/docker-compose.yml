version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lakshya_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lakshya_trader
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lakshya_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lakshya_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lakshya_network

  # Telegram Bot
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lakshya_bot
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Telegram
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      ADMIN_IDS: ${ADMIN_IDS}
      
      # Database
      DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD:-changeme}@postgres:5432/lakshya_trader
      DATABASE_POOL_SIZE: 20
      DATABASE_MAX_OVERFLOW: 10
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      REDIS_CACHE_TTL: 60
      
      # API Keys
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}
      FINNHUB_API_KEY: ${FINNHUB_API_KEY}
      TWELVE_DATA_API_KEY: ${TWELVE_DATA_API_KEY}
      OPENROUTER_API_KEY: ${OPENROUTER_API_KEY}
      
      # AI Configuration
      AI_MODEL: google/gemini-2.0-flash-exp:free
      AI_MAX_TOKENS: 500
      AI_TEMPERATURE: 0.7
      
      # Feature Flags
      ENABLE_AI_ANALYSIS: ${ENABLE_AI_ANALYSIS:-true}
      ENABLE_AUTO_SCANNER: ${ENABLE_AUTO_SCANNER:-true}
      ENABLE_VOICE_ALERTS: ${ENABLE_VOICE_ALERTS:-false}
      ENABLE_DAILY_DIGEST: ${ENABLE_DAILY_DIGEST:-true}
      
      # Deployment
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: INFO
      LOG_FILE: logs/lakshya_trader.log
    volumes:
      - ./logs:/app/logs
    networks:
      - lakshya_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  lakshya_network:
    driver: bridge
